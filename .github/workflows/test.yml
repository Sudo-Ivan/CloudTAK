name: Test

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  data:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.sha || github.sha}}

      - name: Docker Data Task Build
        run: docker compose build task

      - name: Docker Data Task Lint
        run: docker run cloudtak-task:latest npm run lint

  pmtiles:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.sha || github.sha}}

      - name: Docker Data Task Build
        run: docker compose build pmtiles

      - name: Docker Data Task Lint
        run: docker run cloudtak-pmtiles:latest npm run lint

      - name: Docker Data Task Test
        run: docker run cloudtak-pmtiles:latest npm test

  test:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.sha || github.sha}}

      - name: Docker Compose Build
        run: docker compose up --build -d postgis

      - name: Docker API Build
        run: docker compose build api

      - name: Docker API Lint
        run: docker run cloudtak-api:latest sh -c "npm install --include=dev && npm run lint"

      - name: Docker API Test
        run: docker run --network cloudtak_default
          -e "POSTGRES=postgres://docker:docker@postgis:5432/gis"
          cloudtak-api:latest npm test

      - name: Docker Cleanup
        run: docker compose kill
